<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2012-2017 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://oss.oracle.com/licenses/CDDL+GPL-1.1
    or LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!DOCTYPE book [
<!ENTITY % ents SYSTEM "docbook.ent">
%ents;
]>
<section version="5.0" xml:id="tools-wsimport-ant-task" xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
    <title><command>wsimport</command> Ant Task</title>

    <section xml:id="wsimport-task-overview">
        <title><command>wsimport</command> Task Overview</title>

        <para>The <command>wsimport</command> generates JAX-WS portable
        artifacts, such as:</para>

        <itemizedlist>
            <listitem>
                <para>Service Endpoint Interface (SEI)</para>
            </listitem>

            <listitem>
                <para>Service</para>
            </listitem>

            <listitem>
                <para>Exception class mapped from
                <literal>wsdl:fault</literal> (if any)</para>
            </listitem>

            <listitem>
                <para>Async Reponse Bean derived from response
                <literal>wsdl:message</literal> (if any)</para>
            </listitem>

            <listitem>
                <para>JAXB generated value types (mapped java classes from
                schema types)</para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="using-wsimport-task">
        <title>Using <command>wsimport</command> Task</title>

        <para>To use this <command>wsimport</command> task, a
        <literal>&lt;taskdef&gt;</literal> element needs to be added to the
        project as given below:</para>

        <informalexample>
            <programlisting language="xml"><![CDATA[<taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
    <classpath path="jaxws.classpath"/>
</taskdef>]]></programlisting>
        </informalexample>

        <para>where <literal>jaxws.classpath</literal> is a reference to a
        <link
        xlink:href="http://ant.apache.org/manual/using.html#path">path-like
        structure</link>, defined elsewhere in the build environment, and
        contains the list of classes required by the JAX-WS tools.</para>

        <section xml:id="section-8164488302388055">
            <title>Environment Variables</title>

            <itemizedlist>
                <listitem>
                    <para><link
                    xlink:href="http://wiki.apache.org/ant/TheElementsOfAntStyle">ANT_OPTS</link>
                    - command-line arguments that should be passed to the JVM.
                    For example, you can define system properties or set the
                    maximum Java heap size here.</para>
                </listitem>
            </itemizedlist>
        </section>

        <section xml:id="section-925990378001543">
            <title>wsimport Task Attributes</title>

            <para><command>wsimport</command> supports the following parameter
            attributes:</para>

        <informalexample>
            <programlisting language="xml"><![CDATA[<wsimport
        wsdl="..."
        destdir="directory for generated class files"
        sourcedestdir="directory for generated source files"
        keep="true|false"
        encoding="..."
        extension="true|false"
        verbose="true|false"
        wsdlLocation="..."
        clientJar="jar file"
        catalog="catalog file"
        package="package name"
        target="target release"
        binding="..."
        quiet="true|false"
        fork="true|false"
        failonerror="true|false"
        xadditionalHeaders="true|false"
        xauthfile="authorization file"
        xdisableAuthenticator="true|false"
        xdebug="true|false"
        xNoAddressingDatabinding="true|false"
        xnocompile="true|false">
    <binding dir="..." includes="..."/>
    <arg value="..."/>
    <xjcarg value="..."/>
    <javacarg value="..."/>
    <jvmarg value="..."/>
    <xmlcatalog refid="another catalog file"/>
    <depends file="..."/>
    <produces dir="..."/>
</wsimport>]]></programlisting>
        </informalexample>

            <informaltable frame="all">
                <tgroup cols="4" colsep="1" rowsep="1">
                    <thead>
                        <row>
                            <entry><emphasis
                            role="bold">Attribute</emphasis></entry>

                            <entry><emphasis
                            role="bold">Description</emphasis></entry>

                            <entry><emphasis
                            role="bold">Required</emphasis></entry>

                            <entry><emphasis role="bold">Command
                            line</emphasis></entry>
                        </row>
                    </thead>

                    <tbody>
                        <row>
                            <entry><literal>wsdl</literal></entry>

                            <entry>WSDL file.</entry>

                            <entry>Yes.</entry>

                            <entry>WSDL location</entry>
                        </row>

                        <row>
                            <entry><literal>destdir</literal></entry>

                            <entry>Specify where to place output generated
                            classes.</entry>

                            <entry>No. Defaults to current working
                            directory.</entry>

                            <entry><literal>-d</literal></entry>
                        </row>

                        <row>
                            <entry><literal>sourcedestdir</literal></entry>

                            <entry>Specify where to place generated source code
                            files, keep is turned on with this option.</entry>

                            <entry>No. Defaults to current working
                            directory.</entry>

                            <entry><literal>-s</literal></entry>
                        </row>

                        <row>
                            <entry><literal>encoding</literal></entry>

                            <entry>Set the encoding name for generated sources,
                            such as UTF-8.</entry>

                            <entry>No. Defaults to platform default.</entry>

                            <entry><literal>-encoding</literal></entry>
                        </row>

                        <row>
                            <entry><literal>keep</literal></entry>

                            <entry>Keep generated source code files, turned on
                            with <literal>sourcedestdir</literal>
                            option.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-keep</literal></entry>
                        </row>

                        <row>
                            <entry><literal>verbose</literal></entry>

                            <entry>Output JAX-WS RI version and messages about what the compiler is
                            doing</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-verbose.</literal></entry>
                        </row>

                        <row>
                            <entry><literal>binding</literal></entry>

                            <entry>Specify external JAX-WS or JAXB binding files
                            or additional schema files (Each
                            <literal>&lt;file&gt;</literal> must have its own
                            <option>-b</option>).</entry>

                            <entry>No. No defaults.</entry>

                            <entry><literal>-b</literal></entry>
                        </row>

                        <row>
                            <entry><literal>extension</literal></entry>

                            <entry>allow vendor extensions (functionality not
                            specified by the specification). Use of extensions
                            may result in applications that are not portable or
                            may not interoperate with other
                            implementations.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-extension</literal></entry>
                        </row>

                        <row>
                            <entry><literal>wsdllocation</literal></entry>

                            <entry>The wsdl URI passed thru this option will be
                            used to set the value of
                            <literal>@WebService.wsdlLocation</literal> and
                            <literal>@WebServiceClient.wsdlLocation</literal>
                            annotation elements on the generated SEI and Service
                            interface.</entry>

                            <entry>No. Defaults to the wsdl URL passed to wsdl
                            attribute.</entry>

                            <entry><literal>-wsdllocation</literal></entry>
                        </row>

                        <row>
                            <entry><literal>clientJar</literal></entry>

                            <entry>Creates the jar file of the generated
                            artifacts along with the WSDL metadata required for
                            invoking the web service.</entry>

                            <entry>No.</entry>

                            <entry><literal>-clientJar</literal></entry>
                        </row>

                        <row>
                            <entry><literal>catalog</literal></entry>

                            <entry>Specify catalog file to resolve external
                            entity references, it supports TR9401, XCatalog, and
                            OASIS XML Catalog format. Additionally, ant
                            xmlcatalog type can be used to resolve entities, see
                            <emphasis role="bold">catalog</emphasis> sample and
                            <xref linkend="users-guide-catalog"
                            xrefstyle="select:title" />.</entry>

                            <entry>No. No defaults.</entry>

                            <entry><literal>-catalog</literal></entry>
                        </row>

                        <row>
                            <entry><literal>package</literal></entry>

                            <entry>Specifies the target package.</entry>

                            <entry>No. It default to the WSDL/Schema
                            targetNamespace to package mapping as defined by the
                            JAXB 2.1 spec.</entry>

                            <entry><literal>-p</literal></entry>
                        </row>

                        <row>
                            <entry><literal>target</literal></entry>

                            <entry>Generate code as per the given JAXWS
                            specification version. For example, 2.0 value
                            generates compliant code for JAXWS 2.0 spec.</entry>

                            <entry>No. Defaults to 2.2.</entry>

                            <entry><literal>-target</literal></entry>
                        </row>

                        <row>
                            <entry><literal>quiet</literal></entry>

                            <entry>Suppress <command>wsimport</command>
                            output.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-quiet</literal></entry>
                        </row>

                        <row>
                            <entry><literal>fork</literal></entry>

                            <entry>Used to execute wsgen using forked VM.</entry>

                            <entry>No. Defaults to false.</entry>
                        
                            <entry>None.</entry>
                        </row>

                        <row>
                            <entry><literal>failonerror</literal></entry>

                            <entry>Indicates whether errors will fail the build.</entry>

                            <entry>No. Defaults to true.</entry>

                            <entry>None.</entry>
                        </row>

                        <row>
                            <entry><literal>xadditionalHeaders</literal></entry>

                            <entry>Map headers not bound to request or response
                            message to Java method parameters.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-XadditionalHeaders</literal></entry>
                        </row>

                        <row>
                            <entry><literal>xauthfile</literal></entry>

                            <entry>File to carry authorization information in
                            the format
                            <uri>http://username:password@example.org/stock?wsdl</uri>.
                            The asterisk character ("*") can be used to match
                            multiple URL patterns.</entry>

                            <entry>No. Defaults to
                            <filename>$HOME/.metro/auth</filename>.</entry>

                            <entry><literal>-Xauthfile</literal></entry>
                        </row>

                        <row>
                            <entry><literal>xdebug</literal></entry>

                            <entry>Print debug information.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-Xdebug</literal></entry>
                        </row>

                        <row>
                            <entry><literal>xdisableAuthenticator</literal></entry>

                            <entry>Disables Authenticator used by JAX-WS RI, <literal>-Xauthfile</literal> option will be ignored if <literal>-XdisableAuthenticator</literal> is set.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-XdisableAuthenticator</literal></entry>
                        </row>

                        <row>
                            <entry><literal>xNoAddressingDatabinding</literal></entry>

                            <entry>Enable binding of W3C EndpointReferenceType
                            to Java.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-Xno-addressing-databinding</literal></entry>
                        </row>

                        <row>
                            <entry><literal>xnocompile</literal></entry>

                            <entry>Do not compile generated Java files.</entry>

                            <entry>No. Defaults to false.</entry>

                            <entry><literal>-Xnocompile</literal></entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </section>

        <section xml:id="section-5178368839933347">
            <title>Nested Elements</title>

            <para><command>wsimport</command> supports the following nested
            element parameters.</para>

            <section xml:id="section-507914090467712">
                <title><literal>binding</literal></title>

                <para>To specify more than one external binding file at the
                same time, use a nested <literal>&lt;binding&gt;</literal>
                element, which has the same syntax as <link
                xlink:href="http://ant.apache.org/manual/Types/fileset.html"><literal>&lt;fileset&gt;</literal></link>.</para>
            </section>

            <section xml:id="section-147957817602781">
                <title><literal>arg</literal></title>

                <para>Additional command line arguments passed to the
                <command>wsimport</command>. For details about the syntax, see
                <link
                xlink:href="http://ant.apache.org/manual/using.html#arg">the
                relevant section</link> in the Ant manual. This nested element
                can be used to specify various options not natively supported
                in the <command>wsimport</command> Ant task. For example,
                currently there is no native support for the following
                <command>wsimport</command> command-line options:</para>

                <itemizedlist>
                    <listitem>
                        <para><code>-XdisableSSLHostnameVerification</code></para>
                    </listitem>
                </itemizedlist>

                <para>This nested element can be used to pass the
                <option>-X</option> command-line options directly like
                "-XadditionalHeaders". To use any of these features from the
                <command>wsimport</command> Ant task, you must specify the
                appropriate nested <literal>&lt;arg&gt;</literal>
                elements.</para>
            </section>

            <section xml:id="section-459991967418923">
                <title><literal>xjcarg</literal></title>

                <para>The usage is similar to <literal>&lt;arg&gt;</literal>
                nested element, except that these arguments are directly
                passed to the XJC tool (JAXB Schema Compiler), which will be
                used for compiling the schema referenced in the wsdl. For
                details about the syntax, see <link
                xlink:href="http://ant.apache.org/manual/using.html#arg">the
                relevant section</link> in the Ant manual.</para>
            </section>

            <section xml:id="section-wsimport-ant-javacarg">
                <title><literal>javacarg</literal></title>

                <para>The usage is similar to <literal>&lt;arg&gt;</literal>
                nested element, except that these arguments are directly passed
                to the Javac Compiler, which will be used for compiling sources
                generated during processing the referenced wsdl. For details
                about the syntax, see <link
                xlink:href="http://ant.apache.org/manual/using.html#arg">the
                relevant section</link> in the Ant manual.Note: use '=' instead of
                space as a delimiter between option name and its value.</para>
            </section>

            <section xml:id="section-wsimport-ant-jvmarg">
                <title><literal>jvmarg</literal></title>

                <para>Use nested <literal>&lt;jvmarg&gt;</literal> elements to
                specify arguments for the the forked VM (ignored if fork is
                disabled), see <link
                xlink:href="http://ant.apache.org/manual/using.html#arg">the
                relevant section</link> in the Ant manual.</para>
            </section>

            <section xml:id="section-804917954967609">
                <title>xmlcatalog</title>

                <para>The <link
                xlink:href="http://ant.apache.org/manual/Types/xmlcatalog.html">xmlcatalog</link>
                element is used to resolve entities when parsing schema
                documents.</para>
            </section>

            <section xml:id="section-wsimport-ant-depprod">
                <title><literal>depends</literal>/<literal>produces</literal></title>

                <para>Files specified with this nested element are taken into
                account when the task does a modification date check. For proper
                syntax, see <link
                xlink:href="http://ant.apache.org/manual/Types/fileset.html"><literal>&lt;fileset&gt;</literal></link>.</para>
            </section>
        </section>
    </section>

    <section xml:id="examples">
        <title><command>wsimport</command> Examples</title>

        <informalexample>
            <programlisting language="xml"><![CDATA[<wsimport
        destdir="${build.classes.home}"
        debug="true"
        wsdl="AddNumbers.wsdl"
        binding="custom.xml"/>]]></programlisting>
        </informalexample>

        <para>The above example generates client-side artifacts for
        <filename>AddNumbers.wsdl</filename>, stores <literal>.class</literal>
        files in the <literal>${build.classes.home}</literal> directory using
        the <filename>custom.xml</filename> customization file. The classpath
        used is <filename>xyz.jar</filename> and compiles with debug
        information on.</para>

        <informalexample>
            <programlisting language="xml"><![CDATA[<wsimport
        keep="true"
        sourcedestdir="${source.dir}"
        destdir="${build.classes.home}"
        extension="true"
        wsdl="AddNumbers.wsdl">
    <xjcarg value="-cp"/>
    <xjcarg file="path/to/fluent-api.jar" />
    <xjcarg value="-Xfluent-api"/>
</wsimport>]]></programlisting>
        </informalexample>

        <para>The above example shows how to generates artifacts for
        <literal>AddNumbers.wsdl</literal> while passing options to JAXB
        <command>xjc</command> tool for XML Schema to Java compilation using
        your JAXB plugin. Note extension attribute which is set to
        <literal>true</literal>. You need to set this to use JAXB
        plugins.</para>

        <para>Multiple JAX-WS and JAXB binding files can be specified using
        <option>-b</option> option and they can be used to customize various
        things like package names, bean names, etc. More information on JAX-WS
        and JAXB binding files can be found in the <xref
        linkend="users-guide-wsdl-customization"
        xrefstyle="select:title" />.</para>
    </section>
</section>
