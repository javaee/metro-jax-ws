/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2013-2017 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package com.sun.xml.ws.client.test;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-SNAPSHOT
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Echo", targetNamespace = "http://echo.org/")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Echo {


    /**
     * 
     * @param add
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "addResponse", targetNamespace = "http://echo.org/", partName = "addResponse")
    @Action(input = "http://echo.org/Echo/addRequest", output = "http://echo.org/Echo/addResponse")
    public int add(
        @WebParam(name = "add", targetNamespace = "http://echo.org/", partName = "add")
        NumbersRequest add);

    /**
     * 
     * @param addNumbersResponse
     * @param addNumbers
     */
    @WebMethod
    @Action(input = "http://echo.org/Echo/addNumbersRequest", output = "http://echo.org/Echo/addNumbersResponse")
    public void addNumbers(
        @WebParam(name = "addNumbers", targetNamespace = "http://echo.org/", partName = "addNumbers")
        NumbersRequest addNumbers,
        @WebParam(name = "addNumbersResponse", targetNamespace = "http://echo.org/", mode = WebParam.Mode.OUT, partName = "addNumbersResponse")
        Holder<Integer> addNumbersResponse);

    /**
     * 
     * @param echoString
     */
    @WebMethod
    @Action(input = "http://echo.org/Echo/echoStringRequest", output = "http://echo.org/Echo/echoStringResponse")
    public void echoString(
        @WebParam(name = "echoString", targetNamespace = "http://echo.org/", mode = WebParam.Mode.INOUT, partName = "echoString")
        Holder<String> echoString);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param echoHeaders
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "echoHeadersResponse", targetNamespace = "http://echo.org/", partName = "echoHeadersResponse", header = true)
    @Action(input = "http://echo.org/Echo/echoHeadersRequest", output = "http://echo.org/Echo/echoHeadersResponse")
    public String echoHeaders(
        @WebParam(name = "echoHeaders", targetNamespace = "http://echo.org/", mode = WebParam.Mode.INOUT, partName = "echoHeaders")
        Holder<String> echoHeaders,
        @WebParam(name = "arg1", targetNamespace = "http://echo.org/", header = true, partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "http://echo.org/", header = true, mode = WebParam.Mode.OUT, partName = "arg2")
        Holder<String> arg2,
        @WebParam(name = "arg3", targetNamespace = "http://echo.org/", header = true, mode = WebParam.Mode.INOUT, partName = "arg3")
        Holder<String> arg3);

}
