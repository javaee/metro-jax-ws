/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2012-2017 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package com.sun.xml.ws.sdo.sample.service;

import java.io.File;

import java.net.MalformedURLException;
import java.net.URL;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build build (050908.2342.55399))

@WebServiceClient(wsdlLocation =
                  "http://slc05kwl:39901/sdoTest/sdoTest?wsdl",
                  targetNamespace = "http://sdo.sample.service/",
                  name = "HRAppService")
public class HRAppService_Service
  extends Service
{
  private static URL wsdlLocationURL;

  private static Logger logger;
  static
  {
    try
    {
      logger = Logger.getLogger("com.sun.xml.ws.sdo.sample.service.HRAppService_Service");
      URL baseUrl = HRAppService_Service.class.getResource(".");
      if (baseUrl == null)
      {
        wsdlLocationURL =
          HRAppService_Service.class
          .getResource("http://slc05kwl:39901/sdoTest/sdoTest?wsdl");
        if (wsdlLocationURL == null)
        {
          baseUrl = new File(".").toURI().toURL();
          wsdlLocationURL =
            new URL(baseUrl, "http://slc05kwl:39901/sdoTest/sdoTest?wsdl");
        }
      }
      else
      {
        wsdlLocationURL =
          new URL(baseUrl, "http://slc05kwl:39901/sdoTest/sdoTest?wsdl");
      }
    }
    catch (MalformedURLException e)
    {
      logger.log(Level.ALL,
                 "Failed to create wsdlLocationURL using http://slc05kwl:39901/sdoTest/sdoTest?wsdl",
                 e);
    }
  }

  public HRAppService_Service()
  {
    super(wsdlLocationURL,
          new QName("http://sdo.sample.service/", "HRAppService"));
  }

  public HRAppService_Service(URL wsdlLocation, WebServiceFeature... features) {
      super(wsdlLocation, new QName("http://sdo.sample.service/", "HRAppService"), features);
  }

  public HRAppService_Service(URL wsdlLocation, QName serviceName)
  {
    super(wsdlLocation, serviceName);
  }

  @WebEndpoint(name = "HRAppServiceSoapHttpPort")
  public com.sun.xml.ws.sdo.sample.service.HRAppService getHRAppServiceSoapHttpPort()
  {
    return (com.sun.xml.ws.sdo.sample.service.HRAppService) super.getPort(new QName("http://sdo.sample.service/",
                                                                     "HRAppServiceSoapHttpPort"),
                                                                     com.sun.xml.ws.sdo.sample.service.HRAppService.class);
  }

  @WebEndpoint(name = "HRAppServiceSoapHttpPort")
  public com.sun.xml.ws.sdo.sample.service.HRAppService getHRAppServiceSoapHttpPort(WebServiceFeature... features)
  {
    return (com.sun.xml.ws.sdo.sample.service.HRAppService) super.getPort(new QName("http://sdo.sample.service/",
                                                                     "HRAppServiceSoapHttpPort"),
                                                                     com.sun.xml.ws.sdo.sample.service.HRAppService.class,
                                                           features);
  }
}
